{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      grid: []\n    };\n  },\n  mounted() {\n    this.splitImage();\n  },\n  methods: {\n    splitImage() {\n      const image = new Image();\n      image.src = require('@/assets/1.jpg');\n      image.onload = () => {\n        const tileWidth = image.width / 4;\n        const tileHeight = image.height / 4;\n        for (let i = 0; i < 4; i++) {\n          for (let j = 0; j < 4; j++) {\n            this.grid.push({\n              src: image.src,\n              position: `-${j * tileWidth}px -${i * tileHeight}px`,\n              toggled: false\n            });\n          }\n        }\n      };\n    },\n    toggleTile(rowIndex, colIndex) {\n      const index = rowIndex * 4 + colIndex;\n      this.grid[index].toggled = !this.grid[index].toggled;\n    }\n  }\n};","map":{"version":3,"names":["data","grid","mounted","splitImage","methods","image","Image","src","require","onload","tileWidth","width","tileHeight","height","i","j","push","position","toggled","toggleTile","rowIndex","colIndex","index"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Januar\\Captcha Errorama\\Errorama-Fail-to-be-human\\Lets Build it FR\\captchascheiterlauf\\src\\components\\Tilecaptcha.vue"],"sourcesContent":["<template>\r\n  <div class=\"image-grid\">\r\n    <div\r\n      v-for=\"(row, rowIndex) in grid\"\r\n      :key=\"rowIndex\"\r\n      class=\"image-grid-row\"\r\n    >\r\n      <div\r\n        v-for=\"(tile, colIndex) in row\"\r\n        :key=\"colIndex\"\r\n        class=\"image-grid-tile\"\r\n        @click=\"toggleTile(rowIndex, colIndex)\"\r\n        :style=\"{ backgroundImage: `url(${tile.src})`, backgroundPosition: tile.position }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      grid: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.splitImage();\r\n  },\r\n  methods: {\r\n    splitImage() {\r\n      const image = new Image();\r\n      image.src = require('@/assets/1.jpg');\r\n      image.onload = () => {\r\n        const tileWidth = image.width / 4;\r\n        const tileHeight = image.height / 4;\r\n        for (let i = 0; i < 4; i++) {\r\n          for (let j = 0; j < 4; j++) {\r\n            this.grid.push({\r\n              src: image.src,\r\n              position: `-${j * tileWidth}px -${i * tileHeight}px`,\r\n              toggled: false,\r\n            });\r\n          }\r\n        }\r\n      };\r\n    },\r\n    toggleTile(rowIndex, colIndex) {\r\n      const index = rowIndex * 4 + colIndex;\r\n      this.grid[index].toggled = !this.grid[index].toggled;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.image-grid-row {\r\n  display: flex;\r\n}\r\n.image-grid-tile {\r\n  width: 25%; /* 4 tiles in a row */\r\n  padding-bottom: 25%; /* To maintain square aspect ratio */\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease;\r\n}\r\n</style>\r\n"],"mappings":";AAmBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPD,UAAUA,CAAA,EAAG;MACX,MAAME,KAAI,GAAI,IAAIC,KAAK,CAAC,CAAC;MACzBD,KAAK,CAACE,GAAE,GAAIC,OAAO,CAAC,gBAAgB,CAAC;MACrCH,KAAK,CAACI,MAAK,GAAI,MAAM;QACnB,MAAMC,SAAQ,GAAIL,KAAK,CAACM,KAAI,GAAI,CAAC;QACjC,MAAMC,UAAS,GAAIP,KAAK,CAACQ,MAAK,GAAI,CAAC;QACnC,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1B,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;YAC1B,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC;cACbT,GAAG,EAAEF,KAAK,CAACE,GAAG;cACdU,QAAQ,EAAG,IAAGF,CAAA,GAAIL,SAAU,OAAMI,CAAA,GAAIF,UAAW,IAAG;cACpDM,OAAO,EAAE;YACX,CAAC,CAAC;UACJ;QACF;MACF,CAAC;IACH,CAAC;IACDC,UAAUA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;MAC7B,MAAMC,KAAI,GAAIF,QAAO,GAAI,IAAIC,QAAQ;MACrC,IAAI,CAACpB,IAAI,CAACqB,KAAK,CAAC,CAACJ,OAAM,GAAI,CAAC,IAAI,CAACjB,IAAI,CAACqB,KAAK,CAAC,CAACJ,OAAO;IACtD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}