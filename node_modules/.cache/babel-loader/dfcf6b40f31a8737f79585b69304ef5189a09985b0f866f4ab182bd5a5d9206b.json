{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-363dc80c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"image-grid\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.grid, (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: rowIndex,\n      class: \"image-grid-row\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (tile, colIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: colIndex,\n        class: \"image-grid-tile\",\n        onClick: $event => $options.toggleTile(rowIndex, colIndex),\n        style: _normalizeStyle({\n          backgroundImage: `url(${tile.src})`,\n          backgroundPosition: tile.position\n        })\n      }, null, 12 /* STYLE, PROPS */, _hoisted_2);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","grid","row","rowIndex","key","tile","colIndex","onClick","$event","$options","toggleTile","style","_normalizeStyle","backgroundImage","src","backgroundPosition","position","_hoisted_2"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Januar\\Captcha Errorama\\Errorama-Fail-to-be-human\\Lets Build it FR\\captchascheiterlauf\\src\\components\\Tilecaptcha.vue"],"sourcesContent":["<template>\r\n  <div class=\"image-grid\">\r\n    <div\r\n      v-for=\"(row, rowIndex) in grid\"\r\n      :key=\"rowIndex\"\r\n      class=\"image-grid-row\"\r\n    >\r\n      <div\r\n        v-for=\"(tile, colIndex) in row\"\r\n        :key=\"colIndex\"\r\n        class=\"image-grid-tile\"\r\n        @click=\"toggleTile(rowIndex, colIndex)\"\r\n        :style=\"{ backgroundImage: `url(${tile.src})`, backgroundPosition: tile.position }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      imageSrc: '/assets/1.jpg', // Update with the path to your image\r\n      grid: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.splitImage();\r\n  },\r\n  methods: {\r\n    splitImage() {\r\n      const image = new Image();\r\n      image.src = this.imageSrc;\r\n      image.onload = () => {\r\n        const tileWidth = image.width / 4;\r\n        const tileHeight = image.height / 4;\r\n        for (let i = 0; i < 4; i++) {\r\n          for (let j = 0; j < 4; j++) {\r\n            this.grid.push({\r\n              src: this.imageSrc,\r\n              position: `-${j * tileWidth}px -${i * tileHeight}px`,\r\n              toggled: false,\r\n            });\r\n          }\r\n        }\r\n      };\r\n    },\r\n    toggleTile(rowIndex, colIndex) {\r\n      const index = rowIndex * 4 + colIndex;\r\n      this.grid[index].toggled = !this.grid[index].toggled;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.image-grid-row {\r\n  display: flex;\r\n}\r\n.image-grid-tile {\r\n  width: 25%; /* 4 tiles in a row */\r\n  padding-bottom: 25%; /* To maintain square aspect ratio */\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAY;mBADzB;;uBACEC,mBAAA,CAcM,OAdNC,UAcM,I,kBAbJD,mBAAA,CAYME,SAAA,QAdVC,WAAA,CAGgCC,KAAA,CAAAC,IAAI,EAHpC,CAGcC,GAAG,EAAEC,QAAQ;yBADvBP,mBAAA,CAYM;MAVHQ,GAAG,EAAED,QAAQ;MACdR,KAAK,EAAC;2BAENC,mBAAA,CAMOE,SAAA,QAbbC,WAAA,CAQmCG,GAAG,EARtC,CAQgBG,IAAI,EAAEC,QAAQ;2BADxBV,mBAAA,CAMO;QAJJQ,GAAG,EAAEE,QAAQ;QACdX,KAAK,EAAC,iBAAiB;QACtBY,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACP,QAAQ,EAAEG,QAAQ;QACpCK,KAAK,EAZdC,eAAA;UAAAC,eAAA,SAY0CR,IAAI,CAACS,GAAG;UAAAC,kBAAA,EAAyBV,IAAI,CAACW;QAAQ;sCAZxFC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}