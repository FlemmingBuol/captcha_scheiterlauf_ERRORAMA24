{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"randomWord\"\n};\nconst _hoisted_2 = {\n  class: \"InputandButtons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"span\", _hoisted_1, _toDisplayString($data.randomWord), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.inputValue = $event),\n    placeholder: \"Beantworte die Frage\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.inputValue]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.redirectToError && $options.redirectToError(...args))\n  }, \"Ich bin kein Roboter\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_toDisplayString","$data","randomWord","_hoisted_2","type","_cache","$event","_ctx","inputValue","placeholder","onClick","args","$options","redirectToError"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Januar\\Captcha Errorama\\Errorama-Fail-to-be-human\\Lets Build it FR\\captchascheiterlauf\\src\\components\\Questioncaptcha.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <span id=\"randomWord\">{{ randomWord }}</span>\r\n  </div>\r\n  <div class=\"InputandButtons\">\r\n      <input type=\"text\" v-model=\"inputValue\" placeholder=\"Beantworte die Frage\">\r\n      <button @click=\"redirectToError\">Ich bin kein Roboter</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Questioncaptcha\",\r\n  data() {\r\n      return {\r\n          wordsArray: [\"Hat ein Mensch diese Fragen geschrieben?\",\"Wie viele Schraubenzieher besitzt du?\",\"Was bin ich?\",\"Wo sind wir hier?\",\"Was ist dein Lieblingswein?\", \"Wieso stehst du nie für dich ein?\", \"Wann machst du am liebsten Pause?\", \"Wärst du lieber ein Roboter?\", \"Auffällig warst du doch schon immer, oder?\"],\r\n          randomWord: \"\"\r\n      };\r\n  },\r\n  created() {\r\n      this.setRandomWord();\r\n  },\r\n  methods: {\r\n      setRandomWord() {\r\n          const randomIndex = Math.floor(Math.random() * this.wordsArray.length);\r\n          this.randomWord = this.wordsArray[randomIndex];\r\n      },\r\n      redirectToError() {\r\n          // Redirect to /error route\r\n          this.$router.push('/error');\r\n      }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EAEYA,EAAE,EAAC;AAAY;;EAEpBC,KAAK,EAAC;AAAiB;;uBAJ9BC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAEM,cADFA,mBAAA,CAA6C,QAA7CC,UAA6C,EAAAC,gBAAA,CAApBC,KAAA,CAAAC,UAAU,iB,GAEvCJ,mBAAA,CAGM,OAHNK,UAGM,G,gBAFFL,mBAAA,CAA2E;IAApEM,IAAI,EAAC,MAAM;IALxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKkCC,IAAA,CAAAC,UAAU,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAxBF,IAAA,CAAAC,UAAU,E,GACtCV,mBAAA,CAA8D;IAArDY,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,sBAAoB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}