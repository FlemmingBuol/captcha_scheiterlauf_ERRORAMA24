{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"image-gallery\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      key: index,\n      src: image,\n      alt: 'Image ' + (index + 1)\n    }, null, 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","images","image","index","key","src","alt","_hoisted_2"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Januar\\Captcha Errorama\\Errorama-Fail-to-be-human\\Lets Build it FR\\captchascheiterlauf\\src\\components\\Tilecaptcha.vue"],"sourcesContent":["<template>\r\n  <div class=\"image-gallery\">\r\n    <img v-for=\"(image, index) in images\" :key=\"index\" :src=\"image\" :alt=\"'Image ' + (index + 1)\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      images: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadImagesFromDirectory();\r\n  },\r\n  methods: {\r\n    loadImagesFromDirectory() {\r\n      const directoryPath = 'path/to/your/directory'; // Replace this with the path to your directory\r\n      this.images = [];\r\n      // Assuming you have access to the File object here, you can loop through the files in the directory\r\n      // This example assumes you're using the FileReader API to read local files\r\n      const fileInput = document.createElement('input');\r\n      fileInput.type = 'file';\r\n      fileInput.multiple = true;\r\n      fileInput.directory = true;\r\n      fileInput.webkitdirectory = true;\r\n      fileInput.addEventListener('change', () => {\r\n        const files = Array.from(fileInput.files);\r\n        files.forEach(file => {\r\n          if (file.type.match('image.*')) {\r\n            const reader = new FileReader();\r\n            reader.onload = (event) => {\r\n              this.images.push(event.target.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n          }\r\n        });\r\n      });\r\n      fileInput.click();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.image-gallery {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.image-gallery img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin: 5px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;mBAD5B;;uBACEC,mBAAA,CAEM,OAFNC,UAEM,I,kBADJD,mBAAA,CAAgGE,SAAA,QAFpGC,WAAA,CAEkCC,KAAA,CAAAC,MAAM,EAFxC,CAEiBC,KAAK,EAAEC,KAAK;yBAAzBP,mBAAA,CAAgG;MAAzDQ,GAAG,EAAED,KAAK;MAAGE,GAAG,EAAEH,KAAK;MAAGI,GAAG,cAAcH,KAAK;4BAF3FI,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}