{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.selectedCaptcha))), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.inputValue = $event),\n    placeholder: \"Enter something\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.inputValue]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.redirectToError && _ctx.redirectToError(...args))\n  }, \"Go to Error\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createBlock","_resolveDynamicComponent","_ctx","selectedCaptcha","_createElementVNode","type","_cache","$event","inputValue","placeholder","onClick","args","redirectToError"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Januar\\Captcha Errorama\\Errorama-Fail-to-be-human\\Lets Build it FR\\captchascheiterlauf\\src\\components\\Captchastate.vue"],"sourcesContent":["<template>\r\n<component :is=\"selectedCaptcha\" />\r\n  <div>\r\n    <input type=\"text\" v-model=\"inputValue\" placeholder=\"Enter something\">\r\n    <button @click=\"redirectToError\">Go to Error</button>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Standartcaptcha from '@/components/Standartcaptcha.vue'\r\nimport Dotcaptcha from '@/components/Dotcaptcha.vue'\r\nimport Questioncaptcha from '@/components/Questioncaptcha.vue';\r\nimport Tilecaptcha from '@/components/Tilecaptcha.vue';\r\nexport default {\r\n  name: 'Captchastate',\r\n  components: {\r\n    Standartcaptcha,\r\n    Dotcaptcha,\r\n    Tilecaptcha,\r\n    Questioncaptcha\r\n  },\r\n  data() {\r\n    return {\r\n      inputValue: '',\r\n      captchas: ['Standartcaptcha', 'Tilecaptcha', 'Dotcaptcha', 'Questioncaptcha']\r\n    };\r\n  },\r\n  computed: {\r\n    selectedCaptcha() {\r\n      const randomIndex = Math.floor(Math.random() * this.captchas.length);\r\n      return this.captchas[randomIndex];\r\n    },\r\n  methods: {\r\n    redirectToError() {\r\n      // Redirect to /error route\r\n      this.$router.push('/error');\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,U,cACAC,YAAA,CAAmCC,wBADnC,CACgBC,IAAA,CAAAC,eAAe,KAC7BC,mBAAA,CAGI,c,gBAFFA,mBAAA,CAAsE;IAA/DC,IAAI,EAAC,MAAM;IAHtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGgCL,IAAA,CAAAM,UAAU,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAxBP,IAAA,CAAAM,UAAU,E,GACtCJ,mBAAA,CAAqD;IAA5CM,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAET,IAAA,CAAAU,eAAA,IAAAV,IAAA,CAAAU,eAAA,IAAAD,IAAA,CAAe;KAAE,aAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}