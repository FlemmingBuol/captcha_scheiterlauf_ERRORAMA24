{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"burger\"\n};\nconst _hoisted_2 = {\n  class: \"image-gallery\"\n};\nconst _hoisted_3 = [\"src\", \"alt\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      key: index,\n      src: image,\n      alt: 'Image ' + (index + 1),\n      onClick: $event => $options.toggleImage(index),\n      style: _normalizeStyle({\n        opacity: $options.isSelected(index) ? 0.5 : 1\n      })\n    }, null, 12 /* STYLE, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","images","image","index","key","src","alt","onClick","$event","$options","toggleImage","style","_normalizeStyle","opacity","isSelected","_hoisted_3"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Januar\\Captcha Errorama\\Errorama-Fail-to-be-human\\Lets Build it FR\\captchascheiterlauf\\src\\components\\Tilecaptcha.vue"],"sourcesContent":["<template>\r\n  <div class=\"burger\">\r\n    <div class=\"image-gallery\">\r\n      <img v-for=\"(image, index) in images\"\r\n           :key=\"index\"\r\n           :src=\"image\"\r\n           :alt=\"'Image ' + (index + 1)\"\r\n           @click=\"toggleImage(index)\"\r\n           :style=\"{ opacity: isSelected(index) ? 0.5 : 1 }\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      images: [],\r\n      selectedImages: [], // Array to store selected image indices\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadImagesFromDirectory();\r\n  },\r\n  methods: {\r\n    async loadImagesFromDirectory() {\r\n  // Choose a random directory between 1, 2, and 3\r\n  const randomDirectory = Math.floor(Math.random() * 3) + 1;\r\n\r\n  // Manually construct the directory path\r\n  const directoryPath = `@/assets/${randomDirectory}/`;\r\n\r\n  // Define an array to store image paths\r\n  const imagePaths = [];\r\n\r\n  // Sequentially load images from the chosen directory\r\n  for (let i = 1; i <= 4; i++) {\r\n    try {\r\n      // Dynamically import each image\r\n      const imagePath = await import(`${directoryPath}image${i}.jpg`);\r\n      imagePaths.push(imagePath.default);\r\n    } catch (error) {\r\n      console.error(`Failed to load image ${i}:`, error);\r\n    }\r\n  }\r\n\r\n  // Set the images array to the loaded image paths\r\n  this.images = imagePaths;\r\n},\r\n    toggleImage(index) {\r\n      // Toggle the selected state of the image at the given index\r\n      if (this.isSelected(index)) {\r\n        this.selectedImages = this.selectedImages.filter(i => i !== index);\r\n      } else {\r\n        this.selectedImages.push(index);\r\n      }\r\n    },\r\n    isSelected(index) {\r\n      // Check if the image at the given index is selected\r\n      return this.selectedImages.includes(index);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.image-gallery {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 30%;\r\n  box-sizing: border-box; /* Include padding and border in the element's total width */\r\n}\r\n\r\n.image-gallery img {\r\n  flex: 0 0 calc(25% - 10px);\r\n  max-width: calc(25% - 10px);\r\n  max-height: calc(25vw - 10px);\r\n  object-fit: cover;\r\n  margin: 5px;\r\n}\r\n\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAe;mBAF9B;;uBACEC,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,CAOM,OAPNC,UAOM,I,kBANJH,mBAAA,CAKyDI,SAAA,QAR/DC,WAAA,CAGoCC,KAAA,CAAAC,MAAM,EAH1C,CAGmBC,KAAK,EAAEC,KAAK;yBAAzBT,mBAAA,CAKyD;MAJnDU,GAAG,EAAED,KAAK;MACVE,GAAG,EAAEH,KAAK;MACVI,GAAG,cAAcH,KAAK;MACtBI,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACP,KAAK;MACxBQ,KAAK,EARjBC,eAAA;QAAAC,OAAA,EAQ8BJ,QAAA,CAAAK,UAAU,CAACX,KAAK;MAAA;oCAR9CY,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}