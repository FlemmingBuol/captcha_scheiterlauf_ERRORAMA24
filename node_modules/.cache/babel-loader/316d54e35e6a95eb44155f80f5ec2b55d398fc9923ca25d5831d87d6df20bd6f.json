{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-175a52c1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dotstate\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"bubbleChart\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"InputandButtons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createTextVNode(\" Welche Nummer wird angezeigt? \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: \"9\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputValue]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.redirectToError && $options.redirectToError(...args))\n  }, \"Ich bin kein Roboter\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_createTextVNode","_hoisted_3","type","min","max","_cache","$event","$data","inputValue","onClick","args","$options","redirectToError"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Februar\\captchascheiterlauf\\src\\components\\Dotcaptcha.vue"],"sourcesContent":["<template>\r\n    \r\n    <div class=\"dotstate\">\r\n        <div id=\"bubbleChart\"></div>\r\n      Welche Nummer wird angezeigt?\r\n      <div class=\"InputandButtons\">\r\n        <input type=\"number\" min=\"0\" max=\"9\" v-model=\"inputValue\" >\r\n        <button @click=\"redirectToError\">Ich bin kein Roboter</button>\r\n      </div>\r\n    \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as d3 from 'd3';\r\n  \r\n  export default {\r\n    name: \"Dotcaptcha\",\r\n    data() {\r\n      return {\r\n        inputValue: ''\r\n      };\r\n    },\r\n    methods: {\r\n      redirectToError() {\r\n        // Redirect to /error route\r\n        this.$router.push('/error');\r\n      },\r\n      drawBubbleChart() {\r\n        // D3.js script to generate packed bubble chart\r\n        const diameter = 600;\r\n  \r\n        const bubble = d3.pack()\r\n          .size([diameter, diameter])\r\n          .padding(1.5);\r\n  \r\n        const svg = d3.select(\"#bubbleChart\")\r\n          .append(\"svg\")\r\n          .attr(\"width\", diameter)\r\n          .attr(\"height\", diameter)\r\n          .attr(\"class\", \"bubble\");\r\n  \r\n        const numberOfBubbles = Math.floor(Math.random() * (550 - 500) + 500); // Generate a random number of bubbles between 500 and 550\r\n        const nodes = d3.range(numberOfBubbles).map(() => ({radius: Math.random() * 14 + 1}));\r\n  \r\n        const root = d3.hierarchy({children: nodes})\r\n          .sum(function (d) { return d.radius; });\r\n  \r\n        bubble(root);\r\n  \r\n        const color = d3.scaleSequential(d3.interpolateLab(\"red\", \"green\"));  \r\n        const node = svg.selectAll(\".node\")\r\n          .data(root.children)\r\n          .enter().append(\"g\")\r\n          .attr(\"class\", \"node\")\r\n          .attr(\"transform\", function (d) {\r\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n          });\r\n  \r\n        node.append(\"circle\")\r\n          .attr(\"r\", function (d) {\r\n            return d.r;\r\n          })\r\n          .style(\"fill\", function () {\r\n            return color(Math.floor(Math.random() * 10)); // Randomly select a color from the color scale\r\n          });\r\n      }\r\n    },\r\n    mounted() {\r\n      this.drawBubbleChart(); // Call the method to draw bubble chart on component mount\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .bubble {\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n    text-align: center;\r\n  }\r\n  .node circle {\r\n    fill: #ccc;\r\n    stroke: #fff;\r\n  }\r\n  </style>\r\n  \r\n\r\n  //const color = d3.scaleSequential(d3.interpolateLab(\"red\", \"green\"));\r\n"],"mappings":";;;EAESA,KAAK,EAAC;AAAU;gEACjBC,mBAAA,CAA4B;EAAvBC,EAAE,EAAC;AAAa;;EAElBF,KAAK,EAAC;AAAiB;;uBAH9BG,mBAAA,CAQM,OARNC,UAQM,GAPFC,UAA4B,EAHpCC,gBAAA,CAGoC,iCAE9B,GAAAL,mBAAA,CAGM,OAHNM,UAGM,G,gBAFJN,mBAAA,CAA2D;IAApDO,IAAI,EAAC,QAAQ;IAACC,GAAG,EAAC,GAAG;IAACC,GAAG,EAAC,GAAG;IAN5C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsDC,KAAA,CAAAC,UAAU,GAAAF,MAAA;iDAAVC,KAAA,CAAAC,UAAU,E,GACxDb,mBAAA,CAA8D;IAArDc,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,sBAAoB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}