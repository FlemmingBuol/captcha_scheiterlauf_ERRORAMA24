{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \" Tilecaptcha \", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"InputandButtons\"\n};\nconst _hoisted_3 = {\n  id: \"randomWord\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\" Wähle die Kacheln aus, auf denen \"), _createElementVNode(\"span\", _hoisted_3, _toDisplayString($data.randomWord), 1 /* TEXT */), _createTextVNode(\" zu sehen ist. \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.redirectToError && $options.redirectToError(...args))\n  }, \"Ich bin kein Roboter\")])]);\n}","map":{"version":3,"names":["_createElementVNode","class","id","_createElementBlock","_hoisted_1","_hoisted_2","_createTextVNode","_hoisted_3","_toDisplayString","$data","randomWord","onClick","_cache","args","$options","redirectToError"],"sources":["C:\\Users\\Flemming Buol\\Desktop\\Work 2024\\Januar\\Captcha Errorama\\Errorama-Fail-to-be-human\\Lets Build it FR\\captchascheiterlauf\\src\\components\\Tilecaptcha.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div>\r\n        Tilecaptcha\r\n      </div>\r\n      <div class=\"InputandButtons\">\r\n        Wähle die Kacheln aus, auf denen <span id=\"randomWord\">{{ randomWord }}</span> zu sehen ist.\r\n        <button @click=\"redirectToError\">Ich bin kein Roboter</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"Tilecaptcha\",\r\n    data() {\r\n      return {\r\n        wordsArray: [\"Apfel\", \"Birne\", \"Bananen\", \"Erdbeere\", \"Kirsche\"],\r\n        randomWord: \"\"\r\n      };\r\n    },\r\n    mounted() {\r\n      this.chooseRandomWord();\r\n    },\r\n    methods: {\r\n      chooseRandomWord() {\r\n        const randomIndex = Math.floor(Math.random() * this.wordsArray.length);\r\n        this.randomWord = this.wordsArray[randomIndex];\r\n      },\r\n      redirectToError() {\r\n        // Redirect to /error route\r\n        this.$router.push('/error');\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAEMA,mBAAA,CAEM,aAFD,eAEL;;EACKC,KAAK,EAAC;AAAiB;;EACaC,EAAE,EAAC;AAAY;;uBAL1DC,mBAAA,CAQM,cAPJC,UAEM,EACNJ,mBAAA,CAGM,OAHNK,UAGM,GARZC,gBAAA,CAKmC,oCACM,GAAAN,mBAAA,CAA6C,QAA7CO,UAA6C,EAAAC,gBAAA,CAApBC,KAAA,CAAAC,UAAU,kBAN5EJ,gBAAA,CAMsF,iBAC9E,GAAAN,mBAAA,CAA8D;IAArDW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,sBAAoB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}